"use strict";

sap.ui.define(["../../../utils/core", "sap/ui/dt/OverlayRegistry", "../../init-dialogs", "./table-quick-action-base"], function (_____utils_core, OverlayRegistry, ____init_dialogs, ___table_quick_action_base) {
  "use strict";

  const getControlById = _____utils_core["getControlById"];
  const isA = _____utils_core["isA"];
  const DialogNames = ____init_dialogs["DialogNames"];
  const handler = ____init_dialogs["handler"];
  const TableQuickActionDefinitionBase = ___table_quick_action_base["TableQuickActionDefinitionBase"];
  const CREATE_TABLE_ACTION = 'create-table-action';
  const SMART_TABLE_TYPE = 'sap.ui.comp.smarttable.SmartTable';
  const M_TABLE_TYPE = 'sap.m.Table';
  // maintain order if action id

  const CONTROL_TYPES = [SMART_TABLE_TYPE, M_TABLE_TYPE, 'sap.ui.table.TreeTable', 'sap.ui.table.Table'];
  class AddTableActionQuickAction extends TableQuickActionDefinitionBase {
    constructor(context) {
      super(CREATE_TABLE_ACTION, CONTROL_TYPES, 'QUICK_ACTION_ADD_CUSTOM_TABLE_ACTION', context);
    }
    async execute(path) {
      const {
        table,
        iconTabBarFilterKey,
        sectionInfo
      } = this.tableMap[path];
      if (!table) {
        return [];
      }
      if (sectionInfo) {
        const {
          layout,
          section,
          subSection
        } = sectionInfo;
        layout?.setSelectedSection(section);
        section.setSelectedSubSection(subSection);
        this.selectOverlay(table);
      } else {
        getControlById(table.getId())?.getDomRef()?.scrollIntoView();
        this.selectOverlay(table);
      }
      if (this.iconTabBar && iconTabBarFilterKey) {
        this.iconTabBar.setSelectedKey(iconTabBarFilterKey);
      }
      let headerToolbar;
      if (isA(SMART_TABLE_TYPE, table)) {
        headerToolbar = table.getAggregation('items')[0].getAggregation('headerToolbar');
      } else if (isA(M_TABLE_TYPE, table)) {
        headerToolbar = table.getAggregation('headerToolbar');
      }

      // open dialogBox to add, and content is selected ByDefault
      if (headerToolbar) {
        const overlay = OverlayRegistry.getOverlay(headerToolbar) || [];
        await handler(overlay, this.context.rta, DialogNames.ADD_FRAGMENT, undefined, {
          aggregation: 'content',
          title: 'QUICK_ACTION_ADD_CUSTOM_TABLE_ACTION'
        });
      }
      return [];
    }
  }
  var __exports = {
    __esModule: true
  };
  __exports.CREATE_TABLE_ACTION = CREATE_TABLE_ACTION;
  __exports.AddTableActionQuickAction = AddTableActionQuickAction;
  return __exports;
});
//# sourceMappingURL=create-table-action.js.map