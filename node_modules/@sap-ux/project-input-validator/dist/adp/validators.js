"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isDataSourceURI = exports.hasCustomerPrefix = exports.hasContentDuplication = void 0;
/**
 * Validates a value for duplication in existing change files.
 *
 * @param value The value to check for duplication.
 * @param propertyName The property name in the change file objects to check.
 * @param changeFiles The list of existing change files to check against.
 * @returns {boolean} Returns true if a content duplication is found and false if there is no content duplication.
 */
function hasContentDuplication(value, propertyName, changeFiles) {
    return changeFiles.some(({ content }) => {
        const contentProperty = content[propertyName];
        return contentProperty && Object.keys(contentProperty).includes(value);
    });
}
exports.hasContentDuplication = hasContentDuplication;
/**
 * Validates a value for starting with a customer prefix.
 *
 * @param value The value to validate.
 * @returns {boolean} True if the value starts with 'customer.' and false if it does not.
 */
function hasCustomerPrefix(value) {
    return value.toLowerCase().startsWith('customer.');
}
exports.hasCustomerPrefix = hasCustomerPrefix;
/**
 * Validates if a value is a valid data source URI.
 *
 * @param uri The URI to validate.
 * @returns {boolean} True if the URI is valid, false if it is not.
 */
function isDataSourceURI(uri) {
    return /^(?!.*\/\/)\/([^\s]*)\/$/.test(uri);
}
exports.isDataSourceURI = isDataSourceURI;
//# sourceMappingURL=validators.js.map